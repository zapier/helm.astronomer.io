################################
## Astronomer Houston Deployment
#################################
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: {{ .Release.Name }}-houston
  labels:
    component: houston
    tier: astronomer
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: houston
      tier: astronomer
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        component: houston
        tier: astronomer
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      {{- if and (not .Values.houston.backendSecretName) (not .Values.houston.backendConnection) }}
      serviceAccountName: {{ template "houston_bootstrapper_serviceaccount" . }}
      initContainers:
        - name: "{{ .Release.Name }}-houston-bootstrapper"
          image: {{ template "db_bootstrapper_image" . }}
          imagePullPolicy: {{ .Values.images.dbBootstrapper.pullPolicy }}
          env:
            - name: BOOTSTRAP_DB
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
            - name: DB_NAME
              value: {{ .Release.Name }}-houston
            - name: SECRET_NAME
              value: {{ template "houston_backend_secret" . }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: IN_CLUSTER
              value: "true"
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.uid }}
      containers:
        - name: {{ .Release.Name }}-houston
          image: {{ template "houston_image" . }}
          imagePullPolicy: {{ .Values.images.houston.pullPolicy }}
          resources:
{{ toYaml .Values.houston.resources | indent 12 }}
          {{- if .Values.global.tlsSecret }}
          volumeMounts:
            - name: registry-tls-volume
              mountPath: "/etc/houston/tls/"
          {{- end }}
          ports:
            - name: houston-http
              containerPort: 8870
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8870
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8870
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            {{- range $i, $config := .Values.houston.env }}
            - name: {{ $config.name }}
              value: {{ $config.value | quote }}
            {{- end }}
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8870"
            - name: API_ENDPOINT_URL
              value: "/v1"
            - name: WEBSOCKET_ENDPOINT_URL
              value: "/ws"
            - name: PLAYGROUND_ENDPOINT_URL
              value: "/playground"
            - name: DEBUG_DB
              value: "false"
            - name: HELM_ASTRO_REPO
              value: {{ .Values.global.helmRepo }}
            - name: HELM_GLOBAL_CONFIG
              value: {{- include "helm_globals" . | quote | indent 1 }}
            - name: AUTH_STRATEGY
              value: {{- include "auth_strategies" . | trimSuffix "," | quote | indent 1 }}
            - name: COMMANDER_HOST
              value: "{{ .Release.Name }}-commander"
            - name: COMMANDER_PORT
              value: "50051"
            - name: GOOGLE_CLIENT_ID
              value: {{ .Values.auth.google.clientId }}
            - name: AUTH0_CUSTOM
              value: {{ ne .Values.auth.auth0.baseDomain "astronomerio.auth0.com" | quote }}
            - name: AUTH0_CLIENT_ID
              value: {{ .Values.auth.auth0.clientId }}
            - name: AUTH0_BASE_DOMAIN
              value: {{ .Values.auth.auth0.baseDomain }}
            - name: AUTH0_EXTERNAL_LOGIN
              value: {{ .Values.auth.auth0.externalLogin | quote }}
            - name: BASE_URL_ORBIT
              value: "app.{{ .Values.global.baseDomain }}"
            - name: BASE_URL_HOUSTON
              value: "houston.{{ .Values.global.baseDomain }}"
            - name: REGISTRY_CERT_PATH
              value: "/etc/houston/tls/"
            - name: REGISTRY_ISSUER
              value: {{ .Values.registry.auth.issuer }}
            - name: REGISTRY_SERVICE
              value: {{ .Values.registry.auth.service }}
            {{- if .Values.global.baseDomain }}
            - name: REGISTRY_AUTH
              valueFrom:
                secretKeyRef:
                  name: {{ template "registry_auth_secret" . }}
                  key: .dockerconfigjson
            {{- end }}
            - name: JWT_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-houston-jwt-passphrase
                  key: passphrase
            - name: HOUSTON_POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: {{ template "houston_backend_secret" . }}
                  key: connection
            - name: AIRFLOW_POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow_backend_secret" . }}
                  key: connection
            {{- if .Values.smtp.uri }}
            - name: SMTP_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-houston-smtp-uri
                  key: connection
            {{- end }}
    {{ if .Values.global.tlsSecret }}
      volumes:
        - name: registry-tls-volume
          secret:
            secretName: {{ .Values.global.tlsSecret }}
    {{- end }}
